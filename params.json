{"name":"Mesh Bee Firmware Project","tagline":"Firmware covering not only ZigBee","body":"### The Canvas\r\n\r\nHere we developed a magical ZigBee module - **Mesh Bee**.\r\n\r\n![image](http://www.seeedstudio.com/wiki/images/thumb/e/ef/Mesh_bee.jpg/600px-Mesh_bee.jpg)\r\n\r\nMesh Bee is a 2.4GHz wireless transceiver from seeed studio. It's based on NXP's newly JN516x series wireless microcontroller chip and supports ZigBee Pro network stack. \r\n\r\nThe reason we introducing it here is that Mesh Bee is totally open hardware and open sourced, which means that you can customize the firmware at your will. NXP provided the whole developing environment and tools which are all free. There's already a ZigBee Pro stack software to get start. The integrated peripherals' drivers are implemented. You can use JN516x's ARM core to control things and JenOS to simplify your development. \r\n\r\nMesh Bee will bring you lots of fun.\r\n\r\n\r\n### The Image\r\nWe have already developed a firmware for Mesh Bee. The factory firmware wraps the complicated ZigBee stack operation into a few easy to use serial commands, and drives Mesh Bee into a transparent serial communication node that can be part of a simple point-to-point connection or a complex mesh network. Although it can cover the most parts in use it still need improvements. \r\n \r\n####*Features now:* \r\n1. Handle ZigBee network formation  \r\n2. Configuration persistent when reboot  \r\n3. OTA support  \r\n4. AT commands to configure Mesh Bee\r\n    * Show node's information  \r\n    * Whether re-form the network when power up  \r\n    * Whether re-scan the network when power up  \r\n    * Whether auto join network searched  \r\n    * List all networks scanned  \r\n    * Select a network to join   \r\n    * Change the baud rate of UART1  \r\n    * Broadcast or unicast  \r\n    * Unicast destination address  \r\n    * OTA  \r\n    * ...  \r\n\r\n####*TODOs:*\r\n**1. Phase 1:**  \r\n    *Improve the slave firmware (current factory firmware). This branch will still make Mesh Bee a 'slave' UART device to transfer data through a ZigBee network, but more useful.*  \r\n    \r\n**2. Phase 2:**  \r\n    *Develop the controller firmware. This branch will make Mesh Bee a MCU besides a ZigBee node. It can control modules by the GPIO/SPI/I2C, also read analog voltage through ADC pins. This can be done with our [Grove - xBee Carrier](http://www.seeedstudio.com/depot/grove-xbee-carrier-p-905.html?cPath=98_16) board.*\r\n\r\nWe built a feature [poll page](https://groups.google.com/forum/#!topic/seeedstudio-mesh-bee-discussion-group/b073efRU6Lg) for phase 1 at google group, please vote for the features you interested in or you can advance them by posting replies. Thanks.\r\n\r\n\r\n### Discussion\r\nAny query, any question, any idea, any suggestion? Please follow our discussion group [here](https://groups.google.com/forum/#!forum/seeedstudio-mesh-bee-discussion-group) and chat. Feel free to report bugs at that [group](https://groups.google.com/forum/#!forum/seeedstudio-mesh-bee-discussion-group) or [github issue](https://github.com/Seeed-Studio/Mesh_Bee/issues). And welcome new ideas.\r\n\r\n### Links\r\n*   Buy Mesh Bee - coming soon\r\n*   Wiki page for Mesh Bee - [here](http://www.seeedstudio.com/wiki/Mesh_Bee)\r\n\r\n","google":"UA-46589105-2","note":"Don't delete this file! It's used internally to help with page regeneration."}